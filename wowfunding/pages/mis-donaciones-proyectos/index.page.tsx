import { GetServerSideProps, GetStaticProps, NextPage } from 'next';
import MisDonaciones from "components/layouts/mis-donaciones/mis-donaciones";
import CardsMisProyectos from "components/layouts/cards-mis-proyectos/cards-mis-proyectos";
import CardsDonacionesRecomendadas from "components/layouts/cards-donaciones-recomendadas/cards-donaciones-recomendadas";
import GeneralHeader from "components/layouts/header/general-header.component";
import GeneralFooter from "components/layouts/footer-general/general-footer.component";
import { Donaciones } from 'interfaces/donaciones.type';
import { ProyectoFinal } from 'interfaces/proyect.type';
import { getDonacionesUsuario, getDonacionesUsuarioApi } from 'services/donaciones/donaciones.service';
import { getProyectos, getProyectosUsuario } from 'services/proyectos/proyectos.service';
import Head from 'next/head';

interface Props {
  listaDonacionesUsuario: Donaciones[];
  proyectos: ProyectoFinal[];
  listaProyectosUsuario: ProyectoFinal[];
}

const MisDonacionesProyectos: NextPage<Props> = ({ listaDonacionesUsuario, proyectos, listaProyectosUsuario }: Props) => {
  return (
    <>
      <Head>
        <title>Wowfunding</title>
        <meta name="doanciones y proyectos" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <GeneralHeader />
      <MisDonaciones listaDonaciones={listaDonacionesUsuario} listaProyectos={proyectos} />
      <CardsMisProyectos listaProyectosUsuario={listaProyectosUsuario} />
      <CardsDonacionesRecomendadas listaProyectos={proyectos} />
      <GeneralFooter />
    </>
  );
};

export const getServerSideProps: GetServerSideProps = async ({req, res}) => {
  try {
    const usuarioId = 18;

    const donacionesUsuario = await getDonacionesUsuarioApi(usuarioId);
    const proyectos = await getProyectos(0, 12);
    const proyectosUsuario = await getProyectosUsuario(usuarioId);
    res.setHeader('Cache-Control', 'public, s-maxage=10, stale-while-revalidate');

    return {
      props: {
        listaDonacionesUsuario: donacionesUsuario,
        proyectos: proyectos,
        listaProyectosUsuario: proyectosUsuario,
      },
    };
  } catch (error) {
    console.error('Error al ocargar datos', error);

    return {
      props: {
        listaDonacionesUsuario: [],
        proyectos: [],
        listaProyectosUsuario: [],
      },
    };
  }
};

//TODO Ver refactorización código


// export const getServerSideProps: GetServerSideProps = async ({ req, res }) => {
//   try {
//     const proyectos = await getProyectos(0, 10);

//     res.setHeader('Cache-Control', 'public, s-maxage=10, stale-while-revalidate');
    
//     return {
//       props: {
//         proyectos: proyectos,
//         proyectosCargados:true
//       },
//     };
//   } catch (error) {
//     console.error('Error al cargar proyectos', error);
//     return {
//       props: {
//         proyectos: [],
//         proyectosCargados:false
//       },
//     };
//   }
// };

export default MisDonacionesProyectos;


